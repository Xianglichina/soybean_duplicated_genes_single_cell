########## divergent gene expression analysis ##########
### step 1. clean the raw gene count for each tissue in R ###
Recorder the columns and remove the columns without two duplicates (make sure that at least two replicates for each cell type). 
Conduct correlation test between the two replicates using Spearman test. Only keep the replicates that with the correlation > 0.75

#input_file:Gm_atlas_Early_maturation_RNA_gene_celltype_splitReps_counts.txt
#output file:early_maturation_reorder.csv
#script:reorder_gene_counts.Rmd

### step 2. normalize the gene count ###
#input file: early_maturation_reorder.csv
#output file: early_maturation_filter_normalized.csv
This pseudo bulk single cell data can be treated as nromal bulk data
normalize the genes across different cell types within the same tissue and filtered the lowly expressed genes 
R script: normalization_edgeR.Rmd

### step 3. extract the expression gene counts for each duplicated gene pairs with two replicates using python ###
input files: early_maturation_filter_normalized.csv #######glyma_duplicated_pairs_unique_1209.csv####### (unique duplicated gene pairs from above steps)
output file: early_maturation_pairs.csv 
Python script: extract_duplicates_expression.py 
commend: python extract_duplicates_expression.py  early_maturation_filter_normalized.csv #######glyma_duplicated_pairs_unique_1209.csv####### early_maturation_filter_pairs.csv 

### step 4. filter the duplicated pairs with no expression in both genes ###
input file: early_maturation_filter_pairs.csv
output file: 
expressed_early_maturation_pairs_expression_separated_raw.csv (this file contain the gene pairs with the two gene IDs separated as two columns and the expression of the duplicated genes)
expressed_early_maturation_pairs_expression_separated.csv (this file only contains the information of gene pairs and the two gene IDs)
R script: filtered_gene_pairs.Rmd

### step 5. generate coexpression network:get_coexp_network_no_filter.r  ###
run it in the cluster using the following commend
Rscript get_coexp_network_filter.r  early_maturation_filter_normalized.csv

input file is the normalized (and filtered) gene count:  early_maturation_filter_normalized.csv
output file is the coexpression network: early_maturation_filter_coexp_network.Rdata  

### step 6. generate paralog coexpression csv file: get_paralog_coexpression.r ###
input file: expressed_early_maturation_pairs_expression_separated.csv (this sheet includes the gene pairs with some expression, removing the ones not expressed in both genes)

run it in the cluster using the following commend
Rscript get_paralog_coexpression.r  expressed_early_maturation_pairs_expression_separated.csv early_maturation_filter_coexp_network.Rdata 

### step 7. calculate expression fold change. This step should be able to finish in the local computer ###
input:
early_maturation_filter_normalized.csv
early_maturation_paralog_pair_coexpression.csv

output:
early_maturation_paralog_pair_coexpression_fold_change.csv

script:
calculate_expression_fold_change.RMD

The NA in the sheet should be the pairs that with one gene expressed but the others not. 

### step 8. characterize the expression of gene pairs ###
[category1] mono-expressed
[category2] dosage balance
[category3] paralogue dominance
[category4] specialized
[category5] diverged

examine the contribution of each categroy in cell-type specifically expressed genes 
